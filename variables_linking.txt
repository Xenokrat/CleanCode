// 1
// настройки для подсоединения к базе данных находятся в отдельном модуле config.py
POSTGRE_DB_NAME = 'db'
POSTGRE_DB_USER = 'user'
POSTGRE_DB_PASSWORD = '1111'
POSTGRE_DB_HOST = 'xx.xx.xxx.xx'

// используются для подключения к базе в модуле db.py
from config import *

def connect_to_postgres() -> psycopg2.connect:
    return psycopg2.connect(
        dbname=POSTGRE_DB_NAME,
        user=POSTGRE_DB_USER,
        password=POSTGRE_DB_PASSWORD,
        host=POSTGRE_DB_HOST,
    )
// решение обусловлено тем, что настройки используются единожды для установления соединения с базой данных
// так как все константы используются как правило только один раз, то что они в отдельном файле не влияет на скорость работы

// 2
// настройки SQL-запроса по брендам продуктов клиента находятся в отдельном модуле client_data.py
BRANDS = [...'Список брендов'...]

// используются в отдельном модуле для получения данных
json_data = {
    ...
    'brands': brands,
    ...
}
response = requests.post('http://...', json=json_data)
// решение обусловлено тем, что список также используется единожды и легче настраивать его в отдельном файле с данными


// 3
// функция проверяет валидность шаблона из текста, окончания паттерна задается константой
def is_template_valid(text: str):
    PATTERN_STOP_SYMBOL = '*'
    ...
    if char == TEMPLATE_STOP_SYMBOL:
        # do smth

// эта константа используется только данной функцией, не предполагается, что будет часто меняться
// поэтому время связывания переменной - внутри функции



