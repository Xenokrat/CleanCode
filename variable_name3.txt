// 7.1. Примеры правильного именования булевых переменных (5)
empty_cells - any_empty_cells  // остались ли пустые ячейки в матрице
sorted - is_sorted  // отсортирован ли массив?
more_winners - is_another_winner  // если ли второй победитель по количеству голосов (в задаче о большинстве при голосовании)
oct_based - is_oct_based //  является ли число числом в восьмеричной системе 
even_number - is_even  // четное ли число


// 7.2. Примеры использования типовых названий булевых переменных
first_elem_found - found //  найден и удален первый узел с выбранным значением
pointer_out_of_array - error  // ошибка в случае если при обработке массива значение указателя стало больше размера массива 
all_arr_proccesed - done  // весь цикл полностью успешно отработал все элементы


// 7.3. Примеры случаев, когда разумнее использовать более выразительные имена в циклах 

for row in range(matrix_rows):
    for col in range(matrix_columns):
        // do something with matrix[row][col]
// row и col для обозначения индексов строк и столбцов в двумерной матрице


// 7.4. Примеры использования пар имен антонимов (2-3)

left_pointer, right_pointer  // 2 указателя массива в бинарном поиске
current_node, next_node  // текущий и следующий узел (например в связном списке)
prefix, suffix  // prefix - убывающая часть массива слева, suffix - возрастающая часть массива справа


// 7.5. Примеры правильного именования временных переменных

resulting_sum  // расчетная сумма на данной итерации
while True:
    // расчет суммы
    resulting_sum
    // сохраняем максимальную сумму
    current_max_sum = max(current_max_sum, resulting_sum)
    ...